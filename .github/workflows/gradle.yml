name: Gradle Build
on:
  workflow_call:
    inputs:
      java-version:       { required: false, type: string,  default: '17',       description: 'Java version to use' }
      java-distribution:  { required: false, type: string,  default: 'zulu',     description: 'Java distribution to use' }
      DOCKER_USERNAME:    { required: false, type: string,  default: 'rahulsom', description: 'Docker username' }
      publish-candidates: { required: false, type: boolean, default: false,      description: 'Publish Candidates to Sonatype' }
    secrets:
      DOCKER_PASSWORD:                     { required: false, description: 'Docker password or token' }
      ORG_GRADLE_PROJECT_SONATYPEUSERNAME: { required: false, description: 'Sonatype username' }
      ORG_GRADLE_PROJECT_SONATYPEPASSWORD: { required: false, description: 'Sonatype password' }
      ORG_GRADLE_PROJECT_SIGNINGKEY:       { required: false, description: 'Signing key' }
      ORG_GRADLE_PROJECT_SIGNINGPASSWORD:  { required: false, description: 'Signing password' }

jobs:
  build:
    name: "Build with Gradle"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Fetch tags
        if: github.ref == 'refs/heads/main'
        run: git fetch --tags

      - uses: gradle/actions/wrapper-validation@v4

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v5
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: gradle

      - uses: gradle/actions/setup-gradle@v4
        name: Setup Gradle

      - name: Build Branch
        if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/v')
        id: gradle
        run: ./gradlew build

      - name: Build Snapshot
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        env: &gradle_env
          DOCKER_USERNAME: ${{ inputs.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGKEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew build snapshot

      - name: Build Candidate
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-rc') && github.event.inputs.publish-candidates
        env: *gradle_env
        run: ./gradlew -Prelease.useLastTag=true build candidate

      - name: Build Final
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-rc')
        env: *gradle_env
        run: ./gradlew -Prelease.useLastTag=true build final
