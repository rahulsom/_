name: Gradle Build
on:
  workflow_call:
    inputs:
      java-version:
        description: 'Java version to use'
        required: true
        default: '17'
      java-distribution:
        description: 'Java distribution to use'
        required: true
        default: 'zulu'
      ORG_GRADLE_PROJECT_sonatypeUsername:
        description: 'Sonatype username'
        required: false
        default: 'rahulsom'
      DOCKERHUB_USERNAME:
        description: 'DockerHub username'
        required: false
        default: 'rahulsom'
      publish-candidates:
        description: 'Publish to Sonatype'
        required: false
        default: 'false'
    secrets:
      GITHUB_TOKEN:
        description: 'GitHub token'
        required: false
      ORG_GRADLE_PROJECT_sonatypePassword:
        description: 'Sonatype password'
        required: false
      ORG_GRADLE_PROJECT_signingKey:
        description: 'Signing key'
        required: false
      ORG_GRADLE_PROJECT_signingPassword:
        description: 'Signing password'
        required: false

jobs:
  validation:
    name: "Gradle Wrapper Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

  build:
    name: "Build with Gradle"
    runs-on: ubuntu-latest
    needs: validation
    steps:
      - uses: actions/checkout@v2
      - name: Cache Gradle Caches
        id: cache-gradle-caches
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle') }}
          path: |
            ~/.gradle/caches
      - name: Cache Gradle Wrapper
        id: cache-gradle-wrapper
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          path: |
            ~/.gradle/wrapper

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: Build
        run: ./gradlew build

      - name: Build Snapshot
        if: github.ref == 'refs/heads/master'
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ inputs.ORG_GRADLE_PROJECT_sonatypeUsername }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_sonatypePassword }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword }}
        run: ./gradlew build snapshot

      - name: Build Candidate
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-rc') && github.event.inputs.publish-candidates == 'true'
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: rahulsom
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_sonatypePassword }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword }}
        run: ./gradlew -Prelease.useLastTag=true build candidate

      - name: Build Final
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-rc')
        env:
          ORG_GRADLE_PROJECT_sonatypeUsername: rahulsom
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.ORG_GRADLE_PROJECT_sonatypePassword }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword }}
        run: ./gradlew -Prelease.useLastTag=true build final

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JUnit Tests
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit
